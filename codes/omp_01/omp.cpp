#include "omp.h"























// ==
// ||
// ||  M A I N
// ||
// ==


int main(  int argc, char *argv[] )
{

  struct timespec t0, t1;

  cout << "\n\n";
  cout << " --------------------------------------------------------\n";
  cout << " |                                                      |\n";
  cout << " |      O M P  D E M O  C O D E                         |\n";
  cout << " |                                                      |\n";
  cout << " --------------------------------------------------------\n";
  cout << "\n\n";




  cout << "\n\n( 1) ------- Hello world ------------------------------\n\n";
    

















  





  cout << "\n\n( 2) - ----- Simple parallel region -------------------\n\n";
  























  




  cout << "\n\n( 3) ------ Race condition on shared variable --------\n\n";

























  
  


  cout << "\n\n( 4) ------ No race condition on private variable ----\n\n";


















  




  


  cout << "\n\n\n( 5) ****** Parallelize a loop (compare) *************\n\n";


  
  


  cout << "\n( 5) ------ * Serial version * -----------------------\n\n";















  



  


  cout << "\n( 5 ) ------ * OMP version * --------------------------\n\n";






















  
  



  cout << "\n\n\n( 6) ****** Reduction (compare) **********************\n\n";





  





  cout << "\n( 6 ) ------ * OMP Version * --------------------------\n\n";
  



















  


  



  
  cout << "\n\n\n( 7) ------ private directive ------------------------\n\n";




















  

  


  
  cout << "\n\n\n( 8) ------ firstprivate directive --------------------\n\n";
























  
  





  cout << "\n\n\n( 9) ------ lastprivate directive --------------------\n\n";























  








  


  cout << "\n\n\n(10) ------ Processing in specified chunks -----------\n\n";



















  



  

  cout << "\n\n\n(11) ------ Processing in auto chunks ----------------\n\n";







  
  return 0;
  
}


